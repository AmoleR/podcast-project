{"version":3,"sources":["step-1.png","step-2.png","step-3.jpg","step-3-2.png","step-4.png","step-5.png","step-6-1.png","step-6-2.png","amolpodcast.js","how-we-created.js","menuheader.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","amolpodcast","state","show","toggleSection","bind","sectionId","this","setState","style","textAlign","backgroundImage","backgroundSize","className","height","width","src","frameborder","allow","title","Component","howwecreated","alt","step1","step2","step3","step32","step4","step5","step61","step62","menuheader","id","class","href","process","React","App","basename","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.09725a0a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/step-1.c62cbd1e.png\";","module.exports = __webpack_public_path__ + \"static/media/step-2.b7b778c9.png\";","module.exports = __webpack_public_path__ + \"static/media/step-3.dc276343.jpg\";","module.exports = __webpack_public_path__ + \"static/media/step-3-2.311ad4a4.png\";","module.exports = __webpack_public_path__ + \"static/media/step-4.d4b352fc.png\";","module.exports = __webpack_public_path__ + \"static/media/step-5.ab927ac7.png\";","module.exports = __webpack_public_path__ + \"static/media/step-6-1.a9cb58f7.png\";","module.exports = __webpack_public_path__ + \"static/media/step-6-2.5431c6ac.png\";","import React, { Component } from 'react';\n\nclass amolpodcast extends Component {\n  constructor() {\n    super();\n    this.state = {\n      show: [\"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\"]\n    }\n    this.toggleSection = this.toggleSection.bind(this);\n  }\n\n  toggleSection (sectionId) {\n    let show = this.state.show;\n    if (show[sectionId - 1] === \"none\") {\n      show[sectionId - 1] = \"inline-block\";\n    }\n    else {\n      show[sectionId - 1] = \"none\";\n    }\n    this.setState( {show: show} );\n  }\n\n  render() {\n\n    return (\n    <div style={{textAlign: 'center', backgroundImage: 'url(\"https://i.postimg.cc/3Nyvf4mD/iu-2-burned.png\")',backgroundSize: '100vmin 93.8916256158vmin'}}>\n    <span className=\"green-bg\">Setting up this website was a pain. I'll style it and customize it later. Right now, the two below are the important parts.</span>\n    <br /><br /><h1><span className=\"blue-bg\">Amol Interviews Jonny</span></h1><br />\n    <iframe style={{height: \"52vmin\", width: \"80vmin\"}} src=\"https://www.youtube-nocookie.com/embed/eWuWzxddjps?rel=0&modestbranding=1&fs=0&showinfo=0\" frameborder=\"0\" allow=\"encrypted-media;\" title=\"Amol Interviews Jonny\"></iframe>\n    <br /><br /><h1><span className=\"blue-bg\">Jonny Interviews Amol</span></h1><br />\n    <iframe style={{height: \"52vmin\", width: \"80vmin\"}} src=\"https://www.youtube-nocookie.com/embed/k-7aN44zK5o?rel=0&modestbranding=1&fs=0&showinfo=0\" allow=\"encrypted-media\" frameborder=\"0\" title=\"Jonny Interviews Amol\"></iframe>\n    <br /><span className=\"green-bg\">This page was made by Amol Rama and Jonathan Chen.</span>\n    </div>\n    );\n  }\n}\n\nexport default amolpodcast;\n","import React, { Component } from 'react';\nimport step1 from './step-1.png';\nimport step2 from './step-2.png';\nimport step3 from './step-3.jpg';\nimport step32 from './step-3-2.png';\nimport step4 from './step-4.png';\nimport step5 from './step-5.png';\nimport step61 from './step-6-1.png';\nimport step62 from './step-6-2.png';\n\nclass howwecreated extends Component {\n  constructor() {\n    super();\n    this.state = {\n      show: [\"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\"]\n    }\n    this.toggleSection = this.toggleSection.bind(this);\n  }\n\n  toggleSection (sectionId) {\n    let show = this.state.show;\n    if (show[sectionId - 1] === \"none\") {\n      show[sectionId - 1] = \"inline-block\";\n    }\n    else {\n      show[sectionId - 1] = \"none\";\n    }\n    this.setState( {show: show} );\n  }\n\n  render() {\n\n    return (\n    <div style={{textAlign: 'center', backgroundImage: 'url(\"https://i.postimg.cc/3Nyvf4mD/iu-2-burned.png\")',backgroundSize: '100vmin 93.8916256158vmin'}}>\n      <h1><span className=\"blue-bg\">Choose a topic, but wisely</span></h1>\n      <span className=\"green-bg\">After some careful deliberation, Amol and Jonny decided to settle on their shared experience of being locked down due to the coronavirus disease. While coming up with topic names, we were stuck for a while, but then we eventualy decided to use the name Prison-19 as it was a combination of how we felt (like we were stuck in a prison) and the name of the current disease (COVID-19).</span><br />\n      <img alt=\"\"style={{width:\"40vw\"}} src={step1}  /><br /><br /><br />\n      <h1><span className=\"blue-bg\">Find your materials.</span></h1>\n      <span className=\"green-bg\">Due to the inability to meet in person, we decided to use the online video conferencing software Zoom. We used the inbuilt recording feature given by the platform, and decided to do most of the recording in one session. Other good resources that you could try to use are Google Meet (if you also can not meet in person), or a recording device on your phone (if you can meet in person).</span><br />\n      <img alt=\"\"style={{width:\"40vw\"}} src={step2}  /><br /><br /><br />\n      <h1><span className=\"blue-bg\">Choose a time and place to record</span></h1>\n      <span className=\"green-bg\">We decided to record on Friday because neither of us had classes. We only recorded the main part of the podcast (the interview); the rest was done in a follow-up meeting where we finished up the project. We originally thought that the recording should take a maximum of 15 to 20 minutes - but beware; it sometimes takes longer than expected, especially when working with a software such as Zoom or Google Meet that can have serious lag.</span><br />\n      <img alt=\"\"style={{width:\"40vw\"}} src={step3}  /><img alt=\"\"style={{width:\"40vw\"}} src={step32} /><br /><br /><br />\n      <h1><span className=\"blue-bg\">Make a script</span></h1>\n      <span className=\"green-bg\">By this, I mean make a list of your questions that you will ask your partner. Then, have them jot down a rough draft (or some bullet points) of what they are planning to say so that when recording your podcast, there are no sudden surprises. This will also help you gauge the amount of time it will take for your podcast.</span><br />\n      <img alt=\"\"style={{width:\"40vw\"}}  src={step4}  /><br /><br /><br />\n      <h1><span className=\"blue-bg\">Record!</span></h1>\n      <span className=\"green-bg\">Using your recording device and/or the platform of your choice (in our case Zoom), you can start to record your podcast. Don't speak too fast, don't rush, and don't be afraid to ask small follow-up questions or veer slightly off-script. The purpose of the script is so that you do not get lost anywhere.</span><br />\n      <img alt=\"\"style={{width:\"40vw\"}}  src={step5}  /><br /><br /><br />\n      <h1><span className=\"blue-bg\">Touch up and Publish!</span></h1>\n      <span className=\"green-bg\">Using an audio/video editor such as iMovie, edit out small details that weren't satisfactory and try to enhance the sound quality. Here is where you have the most freedom: you can put whatever you want on top of your audio recording, and always edit it. Just remember to publish it to the web when you are done with your podcast! Most people prefer to use a service such as Youtube; other options could include creating a webpage. While most people opt for a google site, I chose to use React JS because of the instant updating and the quick rendering of elements (not to mention it's more flexible!)</span><br />\n      <img alt=\"\"style={{width:\"40vw\"}}  src={step61} /><img alt=\"\"style={{width:\"40vw\"}}  src={step62} />\n    </div>\n    );\n  }\n}\n\nexport default howwecreated;\n","import React from 'react';\n\nclass menuheader extends React.Component {\n\n  render() {\n\n    return (\n      <div id=\"menuheader\">\n        <a class=\"menu-option\" href={process.env.PUBLIC_URL+\"/#/our-podcast\"}>Watch Our Podcast <b>Prison-19</b>!</a>\n        <a class=\"menu-option\" href={process.env.PUBLIC_URL+\"/#/how-we-created/\"}>How We Made Our Podcast!</a>\n      </div>\n    );\n  }\n}\n\nexport default menuheader;\n","import React from 'react';\nimport './App.css';\nimport amolpodcast from './amolpodcast.js';\nimport howwecreated from './how-we-created.js';\nimport menuheader from './menuheader.js';\nimport { HashRouter, Route } from 'react-router-dom';\n\nclass App extends React.Component {\n\n  render() {\n\n    return (\n      <HashRouter basename='/'>\n        <Route path='/' component={menuheader} />\n        <Route path='/our-podcast' component={amolpodcast}  />\n        <Route path='/how-we-created' component={howwecreated}  />\n\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}